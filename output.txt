@global_array = global  [5 x [2 x [3 x float]]] [
 [2 x [3 x float]] [
 [3 x float] [float 1.000000, float 0.000000, float 0.000000],
 [3 x float] [float 0.000000, float 0.000000, float 0.000000]
],
 [2 x [3 x float]] [
 [3 x float] [float 5.000000, float 4.000000, float 9.000000],
 [3 x float] [float 0.000000, float 0.000000, float 0.000000]
],
 [2 x [3 x float]] [
 [3 x float] [float 0.000000, float 0.000000, float 0.000000],
 [3 x float] [float 0.000000, float 0.000000, float 0.000000]
],
 [2 x [3 x float]] [
 [3 x float] [float 0.000000, float 0.000000, float 0.000000],
 [3 x float] [float 0.000000, float 0.000000, float 0.000000]
],
 [2 x [3 x float]] [
 [3 x float] [float 0.000000, float 0.000000, float 0.000000],
 [3 x float] [float 0.000000, float 0.000000, float 0.000000]
]
]

@global_var = global i32 5
@global1 = global i32 zeroinitializer
@const_1 = constant i32 9

define i32 @func.max(i32 %x, i32 %y) {
%y.loader = load i32, i32* %y
%x.loader = load i32, i32* %x
%tmp_var.1 = icmp sgt i32 %x.loader, %y.loader
%tmp_var.2 = zext i1 %tmp_var.1 to i32
%tmp_var.3 = trunc i32 %tmp_var.2 to i1
br i1 %tmp_var.3, label %label.tmp_label.0, label %label.tmp_label.1
%label.tmp_label.0:
%x.loader = load i32, i32* %x
ret i32 %x.loader
br label %label.tmp_label.2
%label.tmp_label.1:
%y.loader = load i32, i32* %y
ret i32 %y.loader
%label.tmp_label.2:
}


define i32 @func.main() {
%a = alloca i32, align 8
store i32 1, i32* %a
%b = alloca i32, align 8
store i32 2, i32* %b
%c = alloca i32, align 8
%a.loader = load i32, i32* %a
%tmp_var.4 = add i32 %a.loader, 2
store i32 %tmp_var.4, i32* %c
%d = alloca [2 x [3 x [4 x i32]]], align 8
%tmp_var.8 = getelementptr [2 x [3 x [4 x i32]]], [2 x [3 x [4 x i32]]]* %d, i32 0, i32 1, i32 0, i32 2
%tmp_var.7 = load i32, i32* %tmp_var.8
store i32 5, i32* %tmp_var.8
%e = alloca i32, align 8
%c.loader = load i32, i32* %c
%tmp_var.10 = getelementptr [2 x [3 x [4 x i32]]], [2 x [3 x [4 x i32]]]* %d, i32 0, i32 1, i32 0, i32 2
%tmp_var.9 = load i32, i32* %tmp_var.10
%tmp_var.11 = add i32 %tmp_var.9, %c.loader
store i32 %tmp_var.11, i32* %e
%g = alloca [5 x i32], align 8
%tmp_var.14 = getelementptr [5 x i32], [5 x i32]* %g, i32 0, i32 0
store i32 1, i32* %tmp_var.14
%tmp_var.15 = getelementptr [5 x i32], [5 x i32]* %g, i32 0, i32 1
store i32 2, i32* %tmp_var.15
%tmp_var.16 = getelementptr [5 x i32], [5 x i32]* %g, i32 0, i32 2
store i32 3, i32* %tmp_var.16
%f = alloca [5 x [2 x [3 x i32]]], align 8
%tmp_var.17 = getelementptr [5 x [2 x [3 x i32]]], [5 x [2 x [3 x i32]]]* %f, i32 0, i32 0, i32 0, i32 0
store i32 1, i32* %tmp_var.17
%tmp_var.18 = getelementptr [5 x [2 x [3 x i32]]], [5 x [2 x [3 x i32]]]* %f, i32 0, i32 1, i32 0, i32 0
store i32 5, i32* %tmp_var.18
%tmp_var.19 = getelementptr [5 x [2 x [3 x i32]]], [5 x [2 x [3 x i32]]]* %f, i32 0, i32 1, i32 0, i32 1
store i32 4, i32* %tmp_var.19
%tmp_var.20 = getelementptr [5 x [2 x [3 x i32]]], [5 x [2 x [3 x i32]]]* %f, i32 0, i32 1, i32 0, i32 2
store i32 9, i32* %tmp_var.20
%h = alloca i32, align 8
store i32 16, i32* %h
%test_var = alloca i32, align 8
store i32 1, i32* %test_var
%test_var.loader = load i32, i32* %test_var
store i32 2, i32* %test_var
%test_var.loader = load i32, i32* %test_var
%tmp_var.25 = getelementptr [5 x i32], [5 x i32]* %g, i32 0, i32 1
%tmp_var.24 = load i32, i32* %tmp_var.25
%h.loader = load i32, i32* %h
%tmp_var.26 = add i32 %h.loader, %tmp_var.24
store i32 %tmp_var.26, i32* %test_var
%test_var.loader = load i32, i32* %test_var
%tmp_var.30 = getelementptr [5 x i32], [5 x i32]* %g, i32 0, i32 2
%tmp_var.29 = load i32, i32* %tmp_var.30
%h.loader = load i32, i32* %h
%tmp_var.31 = add i32 %h.loader, %tmp_var.29
store i32 %tmp_var.31, i32* %test_var
%tmp_var.35 = getelementptr [5 x [2 x [3 x i32]]], [5 x [2 x [3 x i32]]]* %f, i32 0, i32 0, i32 0, i32 0
%tmp_var.34 = load i32, i32* %tmp_var.35
%tmp_var.37 = icmp eq i32 %tmp_var.34, 2
%tmp_var.38 = zext i1 %tmp_var.37 to i32
%tmp_var.43 = trunc i32 %tmp_var.38 to i1
br i1 %tmp_var.43, label %label.tmp_label.6, label %label.tmp_label.7
%label.tmp_label.6:
%e.loader = load i32, i32* %e
%tmp_var.40 = icmp eq i32 %e.loader, 3
%tmp_var.41 = zext i1 %tmp_var.40 to i32
%tmp_var.42 = trunc i32 %tmp_var.41 to i1
br i1 %tmp_var.42, label %label.tmp_label.3, label %label.tmp_label.4
%label.tmp_label.3:
ret i32 2
br label %label.tmp_label.5
%label.tmp_label.4:
ret i32 3
%label.tmp_label.5:
br label %label.tmp_label.8
%label.tmp_label.7:
ret i32 4
%label.tmp_label.8:
%label.tmp_label.9:
@global1.loader = load i32, i32* @global1
%tmp_var.45 = icmp sle i32 @global1.loader, 5
%tmp_var.46 = zext i1 %tmp_var.45 to i32
%tmp_var.47 = trunc i32 %tmp_var.46 to i1
br i1 %tmp_var.47, label %label.tmp_label.10, label %label.tmp_label.11
%label.tmp_label.10:
%label.tmp_label.12:
@global_var.loader = load i32, i32* @global_var
%tmp_var.49 = icmp sge i32 @global_var.loader, 0
%tmp_var.50 = zext i1 %tmp_var.49 to i32
%tmp_var.51 = trunc i32 %tmp_var.50 to i1
br i1 %tmp_var.51, label %label.tmp_label.13, label %label.tmp_label.14
%label.tmp_label.13:
%i = alloca i32, align 8
store i32 1, i32* %i
br label %label.tmp_label.14
br label %label.tmp_label.12
%label.tmp_label.14:
%j = alloca i32, align 8
store i32 5, i32* %j
br label %label.tmp_label.9
%label.tmp_label.11:
%label.tmp_label.15:
@global1.loader = load i32, i32* @global1
%tmp_var.53 = icmp sle i32 @global1.loader, 5
%tmp_var.54 = zext i1 %tmp_var.53 to i32
%tmp_var.55 = trunc i32 %tmp_var.54 to i1
br i1 %tmp_var.55, label %label.tmp_label.16, label %label.tmp_label.17
%label.tmp_label.16:
%label.tmp_label.18:
@global_var.loader = load i32, i32* @global_var
%tmp_var.57 = icmp sge i32 @global_var.loader, 0
%tmp_var.58 = zext i1 %tmp_var.57 to i32
%tmp_var.59 = trunc i32 %tmp_var.58 to i1
br i1 %tmp_var.59, label %label.tmp_label.19, label %label.tmp_label.20
%label.tmp_label.19:
%m = alloca i32, align 8
store i32 1, i32* %m
br label %label.tmp_label.18
br label %label.tmp_label.18
%label.tmp_label.20:
%n = alloca i32, align 8
store i32 5, i32* %n
br label %label.tmp_label.15
%label.tmp_label.17:
%s = alloca i32, align 8
%tmp_var.63 = call i32 @func.max(i32 5, i32 7)
store i32 %tmp_var.63, i32* %s
ret i32 1
}

